{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, ButtonDropdown, Card, CardBody, CardHeader, Col, DropdownItem, DropdownMenu, DropdownToggle, Row } from 'reactstrap';\n\nvar ButtonDropdowns =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ButtonDropdowns, _Component);\n\n  function ButtonDropdowns(props) {\n    var _this;\n\n    _classCallCheck(this, ButtonDropdowns);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ButtonDropdowns).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      dropdownOpen: new Array(19).fill(false)\n    };\n    return _this;\n  }\n\n  _createClass(ButtonDropdowns, [{\n    key: \"toggle\",\n    value: function toggle(i) {\n      var newArray = this.state.dropdownOpen.map(function (element, index) {\n        return index === i ? !element : false;\n      });\n      this.setState({\n        dropdownOpen: newArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: \"animated fadeIn\"\n      }, __jsx(Row, null, __jsx(Col, {\n        xs: \"12\"\n      }, __jsx(Card, null, __jsx(CardHeader, null, __jsx(\"i\", {\n        className: \"fa fa-align-justify\"\n      }), __jsx(\"strong\", null, \"Button Dropdown\"), __jsx(\"div\", {\n        className: \"card-header-actions\"\n      }, __jsx(\"a\", {\n        href: \"https://reactstrap.github.io/components/button-dropdown/\",\n        rel: \"noreferrer noopener\",\n        target: \"_blank\",\n        className: \"card-header-action\"\n      }, __jsx(\"small\", {\n        className: \"text-muted\"\n      }, \"docs\")))), __jsx(CardBody, null, __jsx(ButtonDropdown, {\n        isOpen: this.state.dropdownOpen[0],\n        toggle: function toggle() {\n          _this2.toggle(0);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true\n      }, \"Button Dropdown\"), __jsx(DropdownMenu, {\n        right: true\n      }, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))))), __jsx(Card, null, __jsx(CardHeader, null, __jsx(\"i\", {\n        className: \"fa fa-align-justify\"\n      }), __jsx(\"strong\", null, \"Single button dropdowns\")), __jsx(CardBody, null, __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[1],\n        toggle: function toggle() {\n          _this2.toggle(1);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        color: \"primary\"\n      }, \"Primary\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[2],\n        toggle: function toggle() {\n          _this2.toggle(2);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        color: \"secondary\"\n      }, \"Secondary\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[3],\n        toggle: function toggle() {\n          _this2.toggle(3);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        color: \"success\"\n      }, \"Success\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[4],\n        toggle: function toggle() {\n          _this2.toggle(4);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        color: \"info\"\n      }, \"Info\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[5],\n        toggle: function toggle() {\n          _this2.toggle(5);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        color: \"warning\"\n      }, \"Warning\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[6],\n        toggle: function toggle() {\n          _this2.toggle(6);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        color: \"danger\"\n      }, \"Danger\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))))), __jsx(Card, null, __jsx(CardHeader, null, __jsx(\"i\", {\n        className: \"fa fa-align-justify\"\n      }), __jsx(\"strong\", null, \"Split button dropdowns\")), __jsx(CardBody, null, __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[7],\n        toggle: function toggle() {\n          _this2.toggle(7);\n        }\n      }, __jsx(Button, {\n        id: \"caret\",\n        color: \"primary\"\n      }, \"Primary\"), __jsx(DropdownToggle, {\n        caret: true,\n        color: \"primary\"\n      }), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[8],\n        toggle: function toggle() {\n          _this2.toggle(8);\n        }\n      }, __jsx(Button, {\n        id: \"caret\",\n        color: \"secondary\"\n      }, \"Secondary\"), __jsx(DropdownToggle, {\n        caret: true,\n        color: \"secondary\"\n      }), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[9],\n        toggle: function toggle() {\n          _this2.toggle(9);\n        }\n      }, __jsx(Button, {\n        id: \"caret\",\n        color: \"success\"\n      }, \"Success\"), __jsx(DropdownToggle, {\n        caret: true,\n        color: \"success\"\n      }), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[10],\n        toggle: function toggle() {\n          _this2.toggle(10);\n        }\n      }, __jsx(Button, {\n        id: \"caret\",\n        color: \"info\"\n      }, \"Info\"), __jsx(DropdownToggle, {\n        caret: true,\n        color: \"info\"\n      }), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[11],\n        toggle: function toggle() {\n          _this2.toggle(11);\n        }\n      }, __jsx(Button, {\n        id: \"caret\",\n        color: \"warning\"\n      }, \"Warning\"), __jsx(DropdownToggle, {\n        caret: true,\n        color: \"warning\"\n      }), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[12],\n        toggle: function toggle() {\n          _this2.toggle(12);\n        }\n      }, __jsx(Button, {\n        id: \"caret\",\n        color: \"danger\"\n      }, \"Danger\"), __jsx(DropdownToggle, {\n        caret: true,\n        color: \"danger\"\n      }), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, {\n        divider: true\n      }), __jsx(DropdownItem, null, \"Another Action\"))))), __jsx(Card, null, __jsx(CardHeader, null, __jsx(\"i\", {\n        className: \"fa fa-align-justify\"\n      }), __jsx(\"strong\", null, \"Dropdown directions\")), __jsx(CardBody, null, __jsx(ButtonDropdown, {\n        direction: \"up\",\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[13],\n        toggle: function toggle() {\n          _this2.toggle(13);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        size: \"lg\"\n      }, \"Direction Up\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        direction: \"left\",\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[14],\n        toggle: function toggle() {\n          _this2.toggle(14);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        size: \"lg\"\n      }, \"Direction Left\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        direction: \"right\",\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[15],\n        toggle: function toggle() {\n          _this2.toggle(15);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        size: \"lg\"\n      }, \"Direction Right\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[16],\n        toggle: function toggle() {\n          _this2.toggle(16);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        size: \"lg\"\n      }, \"Default Down\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, null, \"Another Action\"))))), __jsx(Card, null, __jsx(CardHeader, null, __jsx(\"i\", {\n        className: \"fa fa-align-justify\"\n      }), __jsx(\"strong\", null, \"Button Dropdown sizing\")), __jsx(CardBody, null, __jsx(ButtonDropdown, {\n        className: \"mr-1\",\n        isOpen: this.state.dropdownOpen[17],\n        toggle: function toggle() {\n          _this2.toggle(17);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        size: \"lg\"\n      }, \"Large Button\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, null, \"Another Action\"))), __jsx(ButtonDropdown, {\n        isOpen: this.state.dropdownOpen[18],\n        toggle: function toggle() {\n          _this2.toggle(18);\n        }\n      }, __jsx(DropdownToggle, {\n        caret: true,\n        size: \"sm\"\n      }, \"Small Button\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n        header: true\n      }, \"Header\"), __jsx(DropdownItem, {\n        disabled: true\n      }, \"Action Disabled\"), __jsx(DropdownItem, null, \"Action\"), __jsx(DropdownItem, null, \"Another Action\"))))))));\n    }\n  }]);\n\n  return ButtonDropdowns;\n}(Component);\n\nexport default ButtonDropdowns;","map":{"version":3,"sources":["G:/NextJs/ENTRALON/myentralon/src/views/Buttons/ButtonDropdowns/ButtonDropdowns.js"],"names":["React","Component","Button","ButtonDropdown","Card","CardBody","CardHeader","Col","DropdownItem","DropdownMenu","DropdownToggle","Row","ButtonDropdowns","props","toggle","bind","state","dropdownOpen","Array","fill","i","newArray","map","element","index","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonDropdown, Card, CardBody, CardHeader, Col, DropdownItem, DropdownMenu, DropdownToggle, Row } from 'reactstrap';\n\nclass ButtonDropdowns extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: new Array(19).fill(false),\n    };\n  }\n\n  toggle(i) {\n    const newArray = this.state.dropdownOpen.map((element, index) => { return (index === i ? !element : false); });\n    this.setState({\n      dropdownOpen: newArray,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i><strong>Button Dropdown</strong>\n                <div className=\"card-header-actions\">\n                  <a href=\"https://reactstrap.github.io/components/button-dropdown/\" rel=\"noreferrer noopener\" target=\"_blank\" className=\"card-header-action\">\n                    <small className=\"text-muted\">docs</small>\n                  </a>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <ButtonDropdown isOpen={this.state.dropdownOpen[0]} toggle={() => { this.toggle(0); }}>\n                  <DropdownToggle caret>\n                    Button Dropdown\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i><strong>Single button dropdowns</strong>\n              </CardHeader>\n              <CardBody>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[1]} toggle={() => { this.toggle(1); }}>\n                  <DropdownToggle caret color=\"primary\">\n                    Primary\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[2]} toggle={() => { this.toggle(2); }}>\n                  <DropdownToggle caret color=\"secondary\">\n                    Secondary\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[3]} toggle={() => { this.toggle(3); }}>\n                  <DropdownToggle caret color=\"success\">\n                    Success\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[4]} toggle={() => { this.toggle(4); }}>\n                  <DropdownToggle caret color=\"info\">\n                    Info\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[5]} toggle={() => { this.toggle(5); }}>\n                  <DropdownToggle caret color=\"warning\">\n                    Warning\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[6]} toggle={() => { this.toggle(6); }}>\n                  <DropdownToggle caret color=\"danger\">\n                    Danger\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i><strong>Split button dropdowns</strong>\n              </CardHeader>\n              <CardBody>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[7]} toggle={() => { this.toggle(7); }}>\n                  <Button id=\"caret\" color=\"primary\">Primary</Button>\n                  <DropdownToggle caret color=\"primary\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[8]} toggle={() => { this.toggle(8); }}>\n                  <Button id=\"caret\" color=\"secondary\">Secondary</Button>\n                  <DropdownToggle caret color=\"secondary\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[9]} toggle={() => { this.toggle(9); }}>\n                  <Button id=\"caret\" color=\"success\">Success</Button>\n                  <DropdownToggle caret color=\"success\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[10]} toggle={() => { this.toggle(10); }}>\n                  <Button id=\"caret\" color=\"info\">Info</Button>\n                  <DropdownToggle caret color=\"info\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[11]} toggle={() => { this.toggle(11); }}>\n                  <Button id=\"caret\" color=\"warning\">Warning</Button>\n                  <DropdownToggle caret color=\"warning\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[12]} toggle={() => { this.toggle(12); }}>\n                  <Button id=\"caret\" color=\"danger\">Danger</Button>\n                  <DropdownToggle caret color=\"danger\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i><strong>Dropdown directions</strong>\n              </CardHeader>\n              <CardBody>\n                <ButtonDropdown direction=\"up\" className=\"mr-1\" isOpen={this.state.dropdownOpen[13]} toggle={() => { this.toggle(13); }}>\n                  <DropdownToggle caret size=\"lg\">\n                    Direction Up\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown direction=\"left\" className=\"mr-1\" isOpen={this.state.dropdownOpen[14]} toggle={() => { this.toggle(14); }}>\n                  <DropdownToggle caret size=\"lg\">\n                    Direction Left\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown direction=\"right\" className=\"mr-1\" isOpen={this.state.dropdownOpen[15]} toggle={() => { this.toggle(15); }}>\n                  <DropdownToggle caret size=\"lg\">\n                    Direction Right\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[16]} toggle={() => { this.toggle(16); }}>\n                  <DropdownToggle caret size=\"lg\">\n                    Default Down\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i><strong>Button Dropdown sizing</strong>\n              </CardHeader>\n              <CardBody>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[17]} toggle={() => { this.toggle(17); }}>\n                  <DropdownToggle caret size=\"lg\">\n                    Large Button\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown isOpen={this.state.dropdownOpen[18]} toggle={() => { this.toggle(18); }}>\n                  <DropdownToggle caret size=\"sm\">\n                    Small Button\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default ButtonDropdowns;\n"]},"metadata":{},"sourceType":"module"}